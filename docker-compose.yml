services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5433:5432"
    restart: unless-stopped

  elasticsearch:
    image: elasticsearch:8.10.4
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: curl -s http://localhost:9200/_cluster/health || exit 1
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    mem_limit: 768m

  web:
    build: .
    command: >
      sh -c "python manage.py wait_for_elasticsearch &&
             
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=True
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - ELASTICSEARCH_DSL_URL=http://elasticsearch:9200
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    depends_on:
      - db
      - elasticsearch
    restart: unless-stopped

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./staticfiles:/app/staticfiles  # Изменено с ./static:/app/static на ./staticfiles:/app/staticfiles
      - ./media:/app/media
    depends_on:
      - web
    restart: unless-stopped

  bot:
    build: .
    command: >
      sh -c "sleep 30 &&
             python manage.py run_bot"
    volumes:
      - .:/app
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - ELASTICSEARCH_DSL_URL=http://elasticsearch:9200
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    depends_on:
      - db
      - web
    restart: unless-stopped

  indexer:
    build: .
    restart: unless-stopped
    command: >
      sh -c "while true; do
              echo 'Sleeping for 12 hours before rebuilding indices...' &&
              sleep 12h &&
              echo 'Starting Elasticsearch indices rebuild...' &&
              python manage.py rebuild_indices &&
              echo 'Indices rebuild completed!'
             done"
    volumes:
      - .:/app
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=True
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - ELASTICSEARCH_DSL_URL=http://elasticsearch:9200
    depends_on:
      - db
      - elasticsearch

volumes:
  postgres_data:
  elasticsearch_data: